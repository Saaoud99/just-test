use std::collections::HashMap;



pub fn word_frequency_counter<'a>(words: &[&'a str]) -> HashMap<&'a str, usize> {
    let mut res: HashMap<&str, usize> = HashMap::new();
    if words.len() == 0{
        return res;
    }
    res.insert(words[0], 1);
    let mut count = 0;
    for i in words{
        if count == 0{
            res.insert(i, 1);
        }else if  res.get(i).copied() >= Some(1){
            let mut nbr = res.get(i).copied().unwrap();
            nbr +=  1;
            res.insert(i, nbr);
        }else{
            res.insert(i, 1);
        }
        count +=1;
    }
    res


}

pub fn nb_distinct_words(frequency_count: &HashMap<&str, usize>) -> usize {
    frequency_count.len()
}
